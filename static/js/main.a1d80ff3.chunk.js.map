{"version":3,"sources":["components/AppHeader/index.js","components/AppHeader/AppHeader.js","components/SearchPanel/index.js","components/SearchPanel/SearchPanel.js","components/TodoListItem/index.js","components/TodoListItem/TodoListItem.js","components/TodoList/index.js","components/TodoList/TodoList.js","components/ItemStatusFilter/index.js","components/ItemStatusFilter/ItemStatusFilter.js","components/ItemAddForm/index.js","components/ItemAddForm/ItemAddForm.js","components/App/index.js","components/App/App.js","index.js"],"names":["AppHeader","todoCount","doneCount","className","SearchPanel","type","placeholder","TodoListItem","this","props","done","important","label","onItemDelete","onToggleImportant","onToggleDone","classNames","onClick","React","Component","TodoList","items","elements","map","item","id","itemProps","key","ItemStatusFilter","ItemAddForm","onLabelChange","e","setState","target","value","state","onItemAdd","onChange","App","itemsCounter","findItemIndexById","list","findIndex","createItem","toggleProperty","propName","arr","i","oldItem","slice","itemId","todoListItems","indexOfItemToDelete","newItem","filter","length","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1d80ff3.chunk.js","sourcesContent":["import AppHeader from './AppHeader'\nexport default AppHeader","import React from 'react';\nimport './AppHeader.css'\n\nconst AppHeader = ({ todoCount, doneCount }) => {\n    return (\n        <div className=\"app-header d-flex\">\n            <h1>Todo list</h1>\n            <h2>{todoCount} more todo, {doneCount} done.</h2>\n        </div>\n    );\n}\n\nexport default AppHeader;","import SearchPanel from './SearchPanel'\nexport default SearchPanel","import React from 'react';\nimport './SerchPanel.css'\n\nconst SearchPanel = () => {\n    return (\n        <span>\n            <input className=\"form-control search-input\" type=\"text\" placeholder=\"Search\" />\n        </span>\n    );\n}\n\nexport default SearchPanel;","import TodoListItem from './TodoListItem'\nexport default TodoListItem","import React from 'react'\nimport './TodoListItem.css'\n\nclass TodoListItem extends React.Component {\n\n    render() {\n        const { done, important, label, onItemDelete, onToggleImportant, onToggleDone } = this.props\n\n        let classNames = 'todo-list-item';\n\n        if (done) {\n            classNames += ' done'\n        }\n\n        if (important) {\n            classNames += ' important'\n        }\n\n        return (\n            <span className={classNames} >\n                <span\n                    className=\"todo-list-item-label\"\n                    onClick={onToggleDone}\n                >{label}\n                </span>\n\n                <button type=\"button\"\n                    onClick={onToggleImportant}\n                    className=\"btn btn-outline-success btn-sm float-right\">\n                    <i className=\"fa fa-exclamation\" />\n                </button>\n\n                <button type=\"button\"\n                    className=\"btn btn-outline-danger btn-sm float-right\"\n                    onClick={onItemDelete}>\n                    <i className=\"fa fa-trash-o\" />\n                </button>\n            </span>\n        )\n    }\n}\n\n\nexport default TodoListItem;","import TodoList from './TodoList'\nexport default TodoList","import React from 'react';\nimport './TodoList.css'\n\nimport TodoListItem from '../TodoListItem'\n\nconst TodoList = ({ items = [], onItemDelete, onToggleImportant, onToggleDone }) => {\n    const elements = items.map((item) => {\n        const { id, ...itemProps } = item;\n        return (\n            <li key={id} className=\"list-group-item\">\n                <TodoListItem\n                    {...itemProps}\n                    onItemDelete={() => onItemDelete(id)}\n                    onToggleImportant={() => onToggleImportant(id)}\n                    onToggleDone={() => onToggleDone(id)}\n                />\n            </li>\n        )\n    });\n\n    return (\n        <ul className=\"list-group todo-list\">\n            {elements}\n        </ul>\n    );\n}\n\nexport default TodoList","import ItemStatusFilter from './ItemStatusFilter'\nexport default ItemStatusFilter","import React from 'react';\n\nimport './ItemStatusFilter.css';\n\nclass ItemStatusFilter extends React.Component {\n\n    render() {\n        return (\n            <div className=\"btn-group\">\n                <button type=\"button\"\n                    className=\"btn btn-info\">All</button>\n                <button type=\"button\"\n                    className=\"btn btn-outline-secondary\">Active</button>\n                <button type=\"button\"\n                    className=\"btn btn-outline-secondary\">Done</button>\n            </div>\n        );\n    }\n}\n\nexport default ItemStatusFilter;","import ItemAddForm from './ItemAddForm'\nexport default ItemAddForm","import React, { Component } from 'react'\nimport './ItemAddForm.css'\n\nexport default class ItemAddForm extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            label: ''\n        }\n    }\n\n    onLabelChange = (e) => {\n        this.setState({\n            label: e.target.value\n        })\n    }\n\n    render() {\n        const { onItemAdd } = this.props;\n        return (\n            <div className='item-add-form d-flex'>\n                <span>\n                    <input\n                        placeholder=\"Type any text\"\n                        onChange={this.onLabelChange}\n                        className=\"form-control label-input\"\n                        type=\"text\" />\n                </span>\n                <span>\n                    <button\n                        onClick={() => onItemAdd(this.state.label)}\n                        className='btn btn-outline-secondary'>Add Item</button>\n                </span>\n            </div >\n        )\n    }\n}","import App from './App'\nexport default App","import React from 'react'\n\nimport AppHeader from '../AppHeader';\nimport SearchPanel from '../SearchPanel';\nimport TodoList from '../TodoList'\nimport ItemStatusFilter from '../ItemStatusFilter'\nimport ItemAddForm from '../ItemAddForm'\n\nimport './App.css'\n\nclass App extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            todoListItems: [\n                this.createItem('Build awesome app'),\n                this.createItem('Drink some cofee'),\n                this.createItem('Have a nice day'),\n            ]\n        }\n    }\n\n    itemsCounter = 0;\n\n    findItemIndexById = (id, list) => {\n        return list.findIndex(\n            (item) => item.id === id\n        );\n    }\n\n    createItem = (label) => {\n        if (label !== '') {\n            return {\n                id: this.itemsCounter++,\n                label,\n                important: false,\n                done: false\n            }\n        }\n    }\n\n    toggleProperty = (propName, id, arr) => {\n        const i = this.findItemIndexById(id, arr)\n        const oldItem = arr[i]\n        return [\n            ...arr.slice(0, i),\n            { ...oldItem, [propName]: !oldItem[propName] },\n            ...arr.slice(i + 1)\n        ]\n    }\n\n    onItemDelete = (itemId) => {\n        this.setState(({ todoListItems }) => {\n\n            const indexOfItemToDelete = this.findItemIndexById(itemId, todoListItems)\n\n            return {\n                todoListItems: [\n                    ...todoListItems.slice(0, indexOfItemToDelete),\n                    ...todoListItems.slice(indexOfItemToDelete + 1)\n                ]\n            };\n        })\n    }\n\n    onItemAdd = (label) => {\n        const newItem = this.createItem(label);\n\n        if (newItem) {\n            this.setState(({ todoListItems }) => {\n                const items = [...todoListItems, newItem];\n                return {\n                    todoListItems: items\n                }\n            })\n        }\n    }\n\n\n    onToggleImportant = (id) => {\n        this.setState(({ todoListItems }) => {\n            return {\n                todoListItems: this.toggleProperty('important', id, todoListItems)\n            }\n        })\n    }\n\n    onToggleDone = (id) => {\n        this.setState(({ todoListItems }) => {\n            return {\n                todoListItems: this.toggleProperty('done', id, todoListItems)\n            }\n        })\n    }\n\n    render() {\n        const { todoListItems } = this.state\n        const doneCount = todoListItems.filter((item) => item.done).length;\n        const todoCount = todoListItems.length - doneCount;\n\n        return (\n            <div className=\"todo-app\" >\n                <AppHeader todoCount={todoCount} doneCount={doneCount} />\n                <div className=\"top-panel d-flex\">\n                    <SearchPanel />\n                    <ItemStatusFilter />\n                </div>\n\n                <TodoList\n                    items={todoListItems}\n                    onItemDelete={this.onItemDelete}\n                    onToggleImportant={this.onToggleImportant}\n                    onToggleDone={this.onToggleDone}\n                />\n\n                <ItemAddForm\n                    onItemAdd={this.onItemAdd} />\n            </div>\n        )\n    }\n\n}\n\nexport default App","import React from 'react';\nimport ReactDom from 'react-dom';\n\nimport App from './components/App'\n\nReactDom.render(<App />, document.getElementById('root'));"],"sourceRoot":""}