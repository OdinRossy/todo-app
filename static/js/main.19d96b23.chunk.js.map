{"version":3,"sources":["components/AppHeader/index.js","components/AppHeader/AppHeader.js","components/SearchPanel/index.js","components/SearchPanel/SearchPanel.js","components/TodoListItem/index.js","components/TodoListItem/TodoListItem.js","components/TodoList/index.js","components/TodoList/TodoList.js","components/ItemStatusFilter/index.js","components/ItemStatusFilter/ItemStatusFilter.js","components/ItemAddForm/index.js","components/ItemAddForm/ItemAddForm.js","components/App/index.js","components/App/App.js","index.js"],"names":["AppHeader","todoCount","doneCount","className","SearchPanel","onSearchType","e","term","target","value","setState","props","state","type","placeholder","this","onChange","Component","TodoListItem","done","important","label","onItemDelete","onToggleImportant","onToggleDone","classNames","onClick","React","TodoList","items","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilter","ItemAddForm","onLabelChange","onFormSubmit","preventDefault","onItemAdd","clearLabel","onSubmit","App","itemsCounter","findItemIndexById","list","findIndex","createItem","toggleProperty","propName","arr","i","oldItem","slice","itemId","todoListItems","indexOfItemToDelete","newItem","onFilterChange","searchItems","length","it","toLowerCase","indexOf","filterItems","console","error","itemsToShow","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.19d96b23.chunk.js","sourcesContent":["import AppHeader from './AppHeader'\nexport default AppHeader","import React from 'react';\nimport './AppHeader.css'\n\nconst AppHeader = ({ todoCount, doneCount }) => {\n    return (\n        <div className=\"app-header d-flex\">\n            <h1>Todo list</h1>\n            <h2>{todoCount} more todo, {doneCount} done.</h2>\n        </div>\n    );\n}\n\nexport default AppHeader;","import SearchPanel from './SearchPanel'\nexport default SearchPanel","import React, { Component } from 'react';\nimport './SerchPanel.css'\n\nexport default class SearchPanel extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            term: ''\n        }\n    }\n\n    onSearchType = (e) => {\n        const term = e.target.value\n\n        this.setState({\n            term\n        })\n\n        this.props.onSearchType(term)\n    }\n\n    render() {\n        return (\n            <input\n                type=\"text\"\n                className=\"form-control search-input\"\n                placeholder=\"Type to search\"\n                value={this.state.term}\n                onChange={this.onSearchType} />\n        )\n    }\n\n}","import TodoListItem from './TodoListItem'\nexport default TodoListItem","import React from 'react'\nimport './TodoListItem.css'\n\nclass TodoListItem extends React.Component {\n\n    render() {\n        const { done, important, label, onItemDelete, onToggleImportant, onToggleDone } = this.props\n\n        let classNames = 'todo-list-item';\n\n        if (done) {\n            classNames += ' done'\n        }\n\n        if (important) {\n            classNames += ' important'\n        }\n\n        return (\n            <span className={classNames} >\n                <span\n                    className=\"todo-list-item-label\"\n                    onClick={onToggleDone}\n                >{label}\n                </span>\n\n                <button type=\"button\"\n                    onClick={onToggleImportant}\n                    className=\"btn btn-outline-success btn-sm float-right\">\n                    <i className=\"fa fa-exclamation\" />\n                </button>\n\n                <button type=\"button\"\n                    className=\"btn btn-outline-danger btn-sm float-right\"\n                    onClick={onItemDelete}>\n                    <i className=\"fa fa-trash-o\" />\n                </button>\n            </span>\n        )\n    }\n}\n\n\nexport default TodoListItem;","import TodoList from './TodoList'\nexport default TodoList","import React from 'react';\nimport './TodoList.css'\n\nimport TodoListItem from '../TodoListItem'\n\nconst TodoList = ({ items = [], onItemDelete, onToggleImportant, onToggleDone }) => {\n    const elements = items.map((item) => {\n        const { id, ...itemProps } = item;\n        return (\n            <li key={id} className=\"list-group-item\">\n                <TodoListItem\n                    {...itemProps}\n                    onItemDelete={() => onItemDelete(id)}\n                    onToggleImportant={() => onToggleImportant(id)}\n                    onToggleDone={() => onToggleDone(id)}\n                />\n            </li>\n        )\n    });\n\n    return (\n        <ul className=\"list-group todo-list\">\n            {elements}\n        </ul>\n    );\n}\n\nexport default TodoList","import ItemStatusFilter from './ItemStatusFilter'\nexport default ItemStatusFilter","import React from 'react';\n\nimport './ItemStatusFilter.css';\n\nclass ItemStatusFilter extends React.Component {\n\n    buttons = [\n        { name: 'all', label: 'All' },\n        { name: 'active', label: 'Active' },\n        { name: 'done', label: 'Done' }\n    ]\n\n    onClick = (filter) => {\n        this.props.onFilter(filter)\n    }\n\n    render() {\n        const { filter } = this.props;\n\n        const buttons = this.buttons.map(({ name, label }) => {\n            let className = 'btn';\n            if (filter === name) {\n                className += ' btn-info'\n            } else {\n                className += ' btn-outline-secondary'\n            }\n            return (\n                <button key={name}\n                    type=\"button\"\n                    onClick={() => this.onClick(name)}\n                    className={className}>{label}</button>\n            )\n        })\n\n        return (\n            <div className=\"btn-group\">\n                {buttons}\n            </div>\n        );\n    }\n}\n\nexport default ItemStatusFilter;","import ItemAddForm from './ItemAddForm'\nexport default ItemAddForm","import React, { Component } from 'react'\nimport './ItemAddForm.css'\n\nexport default class ItemAddForm extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            label: ''\n        }\n    }\n\n    onLabelChange = (e) => {\n        this.setState({\n            label: e.target.value\n        })\n    }\n\n    onFormSubmit = (e) => {\n        e.preventDefault();\n        this.props.onItemAdd(this.state.label);\n        this.clearLabel()\n    }\n\n    clearLabel = () => {\n        this.setState({\n            label: ''\n        })\n    }\n\n    render() {\n        return (\n            <form\n                className='item-add-form d-flex'\n                onSubmit={this.onFormSubmit}>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Type any text\"\n                    value={this.state.label}\n                    onChange={this.onLabelChange} />\n                <button\n                    className='btn btn-outline-secondary'>Add</button>\n            </form>\n        )\n    }\n}","import App from './App'\nexport default App","import React from 'react'\n\nimport AppHeader from '../AppHeader';\nimport SearchPanel from '../SearchPanel';\nimport TodoList from '../TodoList'\nimport ItemStatusFilter from '../ItemStatusFilter'\nimport ItemAddForm from '../ItemAddForm'\n\nimport './App.css'\n\nclass App extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            todoListItems: [\n                this.createItem('Build awesome app'),\n                this.createItem('Drink some cofee'),\n                this.createItem('Have a nice day'),\n            ],\n            term: '',\n            filter: 'all',\n        }\n    }\n\n    itemsCounter = 0;\n\n    findItemIndexById = (id, list) => {\n        return list.findIndex(\n            (item) => item.id === id\n        );\n    }\n\n    createItem = (label) => {\n        if (label !== '') {\n            return {\n                id: this.itemsCounter++,\n                label,\n                important: false,\n                done: false\n            }\n        }\n    }\n\n    toggleProperty = (propName, id, arr) => {\n        const i = this.findItemIndexById(id, arr)\n        const oldItem = arr[i]\n        return [\n            ...arr.slice(0, i),\n            { ...oldItem, [propName]: !oldItem[propName] },\n            ...arr.slice(i + 1)\n        ]\n    }\n\n    onItemDelete = (itemId) => {\n        this.setState(({ todoListItems }) => {\n\n            const indexOfItemToDelete = this.findItemIndexById(itemId, todoListItems)\n\n            return {\n                todoListItems: [\n                    ...todoListItems.slice(0, indexOfItemToDelete),\n                    ...todoListItems.slice(indexOfItemToDelete + 1)\n                ]\n            };\n        })\n    }\n\n    onItemAdd = (label) => {\n        const newItem = this.createItem(label);\n\n        if (newItem) {\n            this.setState(({ todoListItems }) => {\n                const items = [...todoListItems, newItem];\n                return {\n                    todoListItems: items\n                }\n            })\n        }\n    }\n\n    onToggleImportant = (id) => {\n        this.setState(({ todoListItems }) => {\n            return {\n                todoListItems: this.toggleProperty('important', id, todoListItems)\n            }\n        })\n    }\n\n    onToggleDone = (id) => {\n        this.setState(({ todoListItems }) => {\n            return {\n                todoListItems: this.toggleProperty('done', id, todoListItems)\n            }\n        })\n    }\n\n    onSearchType = (term) => {\n        this.setState({\n            term\n        })\n    }\n\n    onFilterChange = (filter) => {\n        this.setState({\n            filter\n        })\n    }\n\n    searchItems = (items, term) => {\n        if (term.length === 0) {\n            return items\n        }\n        return items.filter((it) => {\n            return it.label.toLowerCase()\n                .indexOf(term.toLowerCase()) > -1\n        })\n    }\n\n    filterItems = (items, filter) => {\n        switch (filter.toLowerCase()) {\n            case 'all': {\n                return items\n            }\n            case 'active': {\n                return items.filter(it => !it.done)\n            }\n            case 'done': {\n                return items.filter(it => it.done)\n            }\n            default: {\n                console.error('Unexpected filter', filter)\n                return null\n            }\n        }\n    }\n\n    render() {\n        const { todoListItems, term, filter } = this.state\n        const itemsToShow = this.filterItems(this.searchItems(todoListItems, term), filter);\n        const doneCount = todoListItems.filter((item) => item.done).length;\n        const todoCount = todoListItems.length - doneCount;\n\n        return (\n            <div className=\"todo-app\" >\n                <AppHeader todoCount={todoCount} doneCount={doneCount} />\n                <div className=\"top-panel d-flex\">\n                    <SearchPanel\n                        onSearchType={this.onSearchType} />\n                    <ItemStatusFilter\n                        filter={filter}\n                        onFilter={this.onFilterChange} />\n                </div>\n\n                <TodoList\n                    items={itemsToShow}\n                    onItemDelete={this.onItemDelete}\n                    onToggleImportant={this.onToggleImportant}\n                    onToggleDone={this.onToggleDone}\n                />\n\n                <ItemAddForm\n                    onItemAdd={this.onItemAdd} />\n            </div>\n        )\n    }\n\n}\n\nexport default App","import React from 'react';\nimport ReactDom from 'react-dom';\n\nimport App from './components/App'\n\nReactDom.render(<App />, document.getElementById('root'));"],"sourceRoot":""}